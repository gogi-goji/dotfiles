dotfiles
========

Personal configuration files

https://github.com/gogi-goji/dotfiles
git@github.com:gogi-goji/dotfiles

# Vim 
===== 

## Getting Started
Vim checks for your user's config file first in ~/.vimrc, then checks for a
global one in /etc/vimrc.  In order to keep things clean and under version
control, use a symbolic link.  `ln -s ~/dotfiles/vimrc ~/.vimrc`

## Plugins
* Vundle (takes care of all the rest of your plugins for you)
    * https://github.com/gmarik/vundle
    * Install vundle (as described in the README in the git repo)
    * in Vim, run :BundleInstall, and then Vim and your .vimrc will take care
      of everything else for you!

##Spell Check
* Install vim-spell-en (installed by default on Arch) 
* The rest is handled by my .vimrc

##Theme
* Solarized 
    * http://ethanschoonover.com/solarized
    * my vimrc should take care of the theme thanks to Vundle.  However, when
      I'm running Vim from a terminal (which I usually do), I need to worry
      about my .Xresources not messing things up.  
    * copy the colours here into your ~/.Xresources file:
      https://github.com/altercation/solarized/blob/master/xresources-colors-solarized/Xresources

##Using user environment with sudo
* One potential problem with a quite customized setup with plugins is that your
  editor is quite dependant on your user's environment
* This can be worked around with sudoedit
    * With `# visudo`, add or edit your sudoers file to include something like
      `username ALL=(ALL) ALL,sudoedit`
    * Ensure that your .xinitrc has `export EDITOR=vim`
    * Then, you can edit files with sudo privileges and your own user's
      environment with `$ sudoedit filename`.  This uses a tmp file, which it
      then writes when you're done.  
